#ifndef TARGET_OS_SIMULATOR
#include <TargetConditionals.h>
#endif
#if TARGET_OS_SIMULATOR
// Generated by Apple Swift version 5.0.1 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import StoreKit;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Nami",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC4Nami22MockPaymentTransaction")
@interface MockPaymentTransaction : SKPaymentTransaction
@property (nonatomic, readonly, copy) NSString * _Nullable transactionIdentifier;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@protocol NamiLogger;

SWIFT_CLASS("_TtC4Nami4Nami")
@interface Nami : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Nami * _Nonnull shared;)
+ (Nami * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Nami * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)doConfigBasedWorkWithWorker:(void (^ _Nonnull)(void))worker;
@property (nonatomic) BOOL smartPaywall;
@property (nonatomic) BOOL mlEnabled;
- (void)registerNamiLoggerWithLogger:(id <NamiLogger> _Nonnull)logger;
- (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)enterCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)exitCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)coreActionWithLabel:(NSString * _Nonnull)label;
@end



typedef SWIFT_ENUM(NSInteger, NamiAnalyticsActionType, closed) {
  NamiAnalyticsActionTypePaywallRaise = 0,
  NamiAnalyticsActionTypePaywallClosed = 1,
  NamiAnalyticsActionTypePaywallRaiseBlocked = 2,
  NamiAnalyticsActionTypePurchaseActivity = 3,
};


SWIFT_CLASS("_TtC4Nami17NamiAnalyticsKeys")
@interface NamiAnalyticsKeys : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiAnalyticsPurchaseActivityType, closed) {
  NamiAnalyticsPurchaseActivityTypeNewPurchase = 0,
  NamiAnalyticsPurchaseActivityTypeCancelled = 1,
  NamiAnalyticsPurchaseActivityTypeResubscribe = 2,
  NamiAnalyticsPurchaseActivityTypeRestored = 3,
};


SWIFT_CLASS("_TtC4Nami20NamiAnalyticsSupport")
@interface NamiAnalyticsSupport : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiAnalyticsSupport * _Nonnull shared;)
+ (NamiAnalyticsSupport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiAnalyticsSupport * _Nonnull)value;
@property (nonatomic, readonly, copy) void (^ _Nullable analyticsHandler)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull);
+ (void)registerAnalyticsHandlerWithHandler:(void (^ _Nullable)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC4Nami15NamiApplication")
@interface NamiApplication : UIApplication
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)sendEvent:(UIEvent * _Nonnull)event;
@end


SWIFT_CLASS("_TtC4Nami11NamiCommand")
@interface NamiCommand : NSObject
+ (void)performCommand:(NSString * _Nonnull)commandString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSURLSessionDataTask;
@class NSCachedURLResponse;
@class NSURLSessionDownloadTask;

SWIFT_CLASS("_TtC4Nami25NamiCommunicationsManager")
@interface NamiCommunicationsManager : NSObject <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end


SWIFT_CLASS("_TtC4Nami17NamiConfiguration")
@interface NamiConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL mlEnabled;)
+ (BOOL)mlEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setMlEnabled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL analyticsEnabled;)
+ (BOOL)analyticsEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setAnalyticsEnabled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC4Nami24NamiCorrectiveFlowLayout")
@interface NamiCorrectiveFlowLayout : UICollectionViewFlowLayout
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MSMessagesAppViewController;

SWIFT_CLASS("_TtC4Nami20NamiExtensionManager")
@interface NamiExtensionManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiExtensionManager * _Nonnull shared;)
+ (NamiExtensionManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiExtensionManager * _Nonnull)value;
@property (nonatomic) BOOL requestFullScreenPaywalls;
- (void)startupNamiFromMessageExtensionWithMessageViewController:(MSMessagesAppViewController * _Nonnull)messageViewController applicationGroupName:(NSString * _Nullable)applicationGroupName;
- (void)extensionDidResign;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSHTTPURLResponse;

SWIFT_PROTOCOL("_TtP4Nami10NamiLogger_")
@protocol NamiLogger <NSObject>
- (void)logHTTPWithRequest:(NSURLRequest * _Nonnull)request response:(NSHTTPURLResponse * _Nonnull)response responseData:(NSData * _Nullable)responseData message:(NSString * _Nonnull)message;
- (void)logMessage:(NSString * _Nonnull)message;
@end

@class UIImage;

SWIFT_CLASS("_TtC4Nami15NamiMetaPaywall")
@interface NamiMetaPaywall : NSObject
@property (nonatomic, copy) NSString * _Nonnull paywallID;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiPaywallInfoDict;
@property (nonatomic, strong) UIImage * _Nullable backgroundImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull developerPaywallID;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SKProduct;
@class NamiMetaPurchase;

SWIFT_CLASS("_TtC4Nami15NamiMetaProduct")
@interface NamiMetaProduct : NSObject
@property (nonatomic, strong) SKProduct * _Nonnull product;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiProductInfoDict;
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, readonly) BOOL isPurchased;
@property (nonatomic, readonly, strong) NamiMetaPurchase * _Nullable productPurchase;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NamiPurchaseSource : NSInteger;

/// Class that represents a purchase that has been made
SWIFT_CLASS("_TtC4Nami16NamiMetaPurchase")
@interface NamiMetaPurchase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, copy) NSString * _Nullable transactionIdentifier;
@property (nonatomic, copy) NSDate * _Nonnull purchaseInitiatedTimestamp;
@property (nonatomic) BOOL isSubscription;
@property (nonatomic, copy) NSDate * _Nullable subscriptionExpirationDate;
@property (nonatomic) enum NamiPurchaseSource purchaseSource;
@property (nonatomic, strong) NamiMetaProduct * _Nullable metaProduct;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

SWIFT_CLASS("_TtC4Nami18NamiPaywallManager")
@interface NamiPaywallManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiPaywallManager * _Nonnull shared;)
+ (NamiPaywallManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiPaywallManager * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)presentNamiPaywallFromVC:(UIViewController * _Nullable)fromVC products:(NSArray<NamiMetaProduct *> * _Nullable)products paywallMetadata:(NamiMetaPaywall * _Nonnull)paywallMetadata backgroundImage:(UIImage * _Nullable)backgroundImage forNami:(BOOL)forNami;
+ (void)registerApplicationAutoRaisePaywallBlocker:(BOOL (^ _Nullable)(void))applicationAutoRaisePaywallBlocker;
+ (void)fetchCustomPaywallMetaForDeveloperID:(NSString * _Nonnull)developerPaywallID :(void (^ _Nonnull)(NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nullable))namiCustomPaywallHandler;
+ (void)registerWithApplicationPaywallProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationPaywallProvider;
+ (void)registerWithApplicationSignInProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationSignInProvider;
- (BOOL)canRaisePaywall SWIFT_WARN_UNUSED_RESULT;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC forNami:(BOOL)forNami;
@end

@class UITextView;

SWIFT_CLASS("_TtC4Nami24NamiPaywallTextFieldCell")
@interface NamiPaywallTextFieldCell : UICollectionViewCell <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiPurchaseResult, closed) {
  NamiPurchaseResultPurchased = 0,
  NamiPurchaseResultRenewed = 1,
  NamiPurchaseResultDeferred = 2,
  NamiPurchaseResultRetrying = 3,
  NamiPurchaseResultCanceled = 4,
  NamiPurchaseResultBlocked = 5,
  NamiPurchaseResultFailed = 6,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseSource, closed) {
  NamiPurchaseSourceExternal = 0,
  NamiPurchaseSourceNamiPaywall = 1,
  NamiPurchaseSourceApplication = 2,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseState, closed) {
  NamiPurchaseStatePending = 0,
  NamiPurchaseStatePurchased = 1,
  NamiPurchaseStateConsumed = 2,
  NamiPurchaseStateResubscribed = 3,
  NamiPurchaseStateUnsubscribed = 4,
  NamiPurchaseStatePurchasedNotValidated = 5,
  NamiPurchaseStateDeferred = 6,
  NamiPurchaseStateFailed = 7,
  NamiPurchaseStateCancelled = 8,
  NamiPurchaseStateUnknown = 9,
};


SWIFT_CLASS("_TtC4Nami21NamiReceiptIAPWrapper")
@interface NamiReceiptIAPWrapper : NSObject
- (nonnull instancetype)initWithJsonDict:(NSDictionary<NSString *, id> * _Nonnull)jsonDict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum StoreKitEnvironmentObjC : NSInteger;

SWIFT_CLASS("_TtC4Nami18NamiReceiptWrapper")
@interface NamiReceiptWrapper : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull receiptJSONDict;
@property (nonatomic, readonly) BOOL hasReceiptData;
@property (nonatomic, readonly) NSInteger statusCode;
@property (nonatomic, readonly) enum StoreKitEnvironmentObjC storeKitEnvironmentObjC;
- (NSString * _Nullable)originalApplicationVersion SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary<NSString *, id> *> * _Nullable)latestReceiptInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NamiReceiptIAPWrapper *> * _Nonnull)sortedIAPItems SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC4Nami18NamiStoreKitHelper")
@interface NamiStoreKitHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NamiStoreKitHelper * _Nonnull shared;)
+ (NamiStoreKitHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull noProductIdentifier;)
+ (NSString * _Nonnull)noProductIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)bypassStoreKitWithBypass:(BOOL)bypass;
- (void)clearBypassStoreKitPurchases;
- (void)buyProduct:(NamiMetaProduct * _Nonnull)metaProduct fromPaywall:(NamiMetaPaywall * _Nullable)paywall responseHandler:(void (^ _Nonnull)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))responseHandler;
- (void)verifyReceiptWithCompletion:(void (^ _Nonnull)(NamiReceiptWrapper * _Nullable))completion;
- (BOOL)isOriginalVersion:(NSString * _Nonnull)originalVersion lowerThanVersion:(NSString * _Nonnull)otherVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)currentAppVersion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isProductPurchased:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)anyProductPurchased:(NSArray<NSString *> * _Nonnull)productIDs SWIFT_WARN_UNUSED_RESULT;
- (NamiMetaPurchase * _Nullable)currentPurchaseRecordsForProductWithProductID:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (void)productsForProductIdentifersWithProductIDs:(NSArray<NSString *> * _Nonnull)productIDs productHandler:(void (^ _Nonnull)(BOOL, NSArray<NamiMetaProduct *> * _Nullable, NSArray<NSString *> * _Nullable, NSError * _Nullable))productHandler;
- (NSArray<NamiMetaPurchase *> * _Nonnull)allPurchasedProducts SWIFT_WARN_UNUSED_RESULT;
- (void)registerWithPurchasesChangedHandler:(void (^ _Nullable)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))changeHandler;
/// Returns all products for either s+ubscriptions or purchaes *
+ (NSData * _Nullable)appReceiptData SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)appReceiptJSON SWIFT_WARN_UNUSED_RESULT;
+ (void)restorePurchasesWithHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))handler;
- (void)consumePurchasedProductWithProductID:(NSString * _Nonnull)productID;
@end

@class RoundedView;
@class UILabel;

SWIFT_CLASS("_TtC4Nami17ProductOptionCell")
@interface ProductOptionCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet RoundedView * _Nullable backgroundRoundedView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable descriptionLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable priceLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationMultiplierLabel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Nami11RoundedView")
@interface RoundedView : UIView
- (void)awakeFromNib;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) BOOL maskTopCorners;
@property (nonatomic) BOOL maskBottomCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface SKProduct (SWIFT_EXTENSION(Nami))
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDictWithPurchaseSource:(enum NamiPurchaseSource)purchaseSource SWIFT_WARN_UNUSED_RESULT;
@end

@class NSNumberFormatter;

@interface SKProduct (SWIFT_EXTENSION(Nami))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSNumberFormatter * _Nonnull priceFormatter;)
+ (NSNumberFormatter * _Nonnull)priceFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setPriceFormatter:(NSNumberFormatter * _Nonnull)value;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedMultipliedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDuration SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationNoPer SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationSingular SWIFT_AVAILABILITY(ios,introduced=11.2);
@end

typedef SWIFT_ENUM(NSInteger, SandboxAccelerationItemUnit, closed) {
  SandboxAccelerationItemUnitHour = 0,
  SandboxAccelerationItemUnitWeek = 1,
  SandboxAccelerationItemUnitMonth = 2,
  SandboxAccelerationItemUnitSixMonth = 3,
  SandboxAccelerationItemUnitYear = 4,
};

typedef SWIFT_ENUM(NSInteger, StoreKitEnvironmentObjC, closed) {
  StoreKitEnvironmentObjCProduction = 0,
  StoreKitEnvironmentObjCSandbox = 1,
  StoreKitEnvironmentObjCNamiStoreKitBypass = 2,
  StoreKitEnvironmentObjCEnvironmentNotYetDetected = 3,
};


SWIFT_CLASS("_TtC4Nami19StoreKitQueueHelper")
@interface StoreKitQueueHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, StoreKitStatusCodes, closed) {
  StoreKitStatusCodesStatusOK = 0,
  StoreKitStatusCodesUnreadableJSON = 21000,
  StoreKitStatusCodesReceiptMalformed = 21002,
  StoreKitStatusCodesReceiptAuthFailed = 21003,
  StoreKitStatusCodesSharedSecretInvalid = 21004,
  StoreKitStatusCodesReceiptServerUnavailable = 21005,
  StoreKitStatusCodesSubscriptionExpired = 21006,
  StoreKitStatusCodesReceiptFromSandboxEnvironment = 21007,
  StoreKitStatusCodesReceiptFromProdEnvironent = 21008,
  StoreKitStatusCodesNamiError = 99999,
};









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#else
#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.0.1 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import StoreKit;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Nami",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC4Nami22MockPaymentTransaction")
@interface MockPaymentTransaction : SKPaymentTransaction
@property (nonatomic, readonly, copy) NSString * _Nullable transactionIdentifier;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@protocol NamiLogger;

SWIFT_CLASS("_TtC4Nami4Nami")
@interface Nami : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Nami * _Nonnull shared;)
+ (Nami * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Nami * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)doConfigBasedWorkWithWorker:(void (^ _Nonnull)(void))worker;
@property (nonatomic) BOOL smartPaywall;
@property (nonatomic) BOOL mlEnabled;
- (void)registerNamiLoggerWithLogger:(id <NamiLogger> _Nonnull)logger;
- (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)enterCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)exitCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)coreActionWithLabel:(NSString * _Nonnull)label;
@end



typedef SWIFT_ENUM(NSInteger, NamiAnalyticsActionType, closed) {
  NamiAnalyticsActionTypePaywallRaise = 0,
  NamiAnalyticsActionTypePaywallClosed = 1,
  NamiAnalyticsActionTypePaywallRaiseBlocked = 2,
  NamiAnalyticsActionTypePurchaseActivity = 3,
};


SWIFT_CLASS("_TtC4Nami17NamiAnalyticsKeys")
@interface NamiAnalyticsKeys : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiAnalyticsPurchaseActivityType, closed) {
  NamiAnalyticsPurchaseActivityTypeNewPurchase = 0,
  NamiAnalyticsPurchaseActivityTypeCancelled = 1,
  NamiAnalyticsPurchaseActivityTypeResubscribe = 2,
  NamiAnalyticsPurchaseActivityTypeRestored = 3,
};


SWIFT_CLASS("_TtC4Nami20NamiAnalyticsSupport")
@interface NamiAnalyticsSupport : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiAnalyticsSupport * _Nonnull shared;)
+ (NamiAnalyticsSupport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiAnalyticsSupport * _Nonnull)value;
@property (nonatomic, readonly, copy) void (^ _Nullable analyticsHandler)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull);
+ (void)registerAnalyticsHandlerWithHandler:(void (^ _Nullable)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC4Nami15NamiApplication")
@interface NamiApplication : UIApplication
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)sendEvent:(UIEvent * _Nonnull)event;
@end


SWIFT_CLASS("_TtC4Nami11NamiCommand")
@interface NamiCommand : NSObject
+ (void)performCommand:(NSString * _Nonnull)commandString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSURLSessionDataTask;
@class NSCachedURLResponse;
@class NSURLSessionDownloadTask;

SWIFT_CLASS("_TtC4Nami25NamiCommunicationsManager")
@interface NamiCommunicationsManager : NSObject <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end


SWIFT_CLASS("_TtC4Nami17NamiConfiguration")
@interface NamiConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL mlEnabled;)
+ (BOOL)mlEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setMlEnabled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL analyticsEnabled;)
+ (BOOL)analyticsEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setAnalyticsEnabled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC4Nami24NamiCorrectiveFlowLayout")
@interface NamiCorrectiveFlowLayout : UICollectionViewFlowLayout
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MSMessagesAppViewController;

SWIFT_CLASS("_TtC4Nami20NamiExtensionManager")
@interface NamiExtensionManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiExtensionManager * _Nonnull shared;)
+ (NamiExtensionManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiExtensionManager * _Nonnull)value;
@property (nonatomic) BOOL requestFullScreenPaywalls;
- (void)startupNamiFromMessageExtensionWithMessageViewController:(MSMessagesAppViewController * _Nonnull)messageViewController applicationGroupName:(NSString * _Nullable)applicationGroupName;
- (void)extensionDidResign;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSHTTPURLResponse;

SWIFT_PROTOCOL("_TtP4Nami10NamiLogger_")
@protocol NamiLogger <NSObject>
- (void)logHTTPWithRequest:(NSURLRequest * _Nonnull)request response:(NSHTTPURLResponse * _Nonnull)response responseData:(NSData * _Nullable)responseData message:(NSString * _Nonnull)message;
- (void)logMessage:(NSString * _Nonnull)message;
@end

@class UIImage;

SWIFT_CLASS("_TtC4Nami15NamiMetaPaywall")
@interface NamiMetaPaywall : NSObject
@property (nonatomic, copy) NSString * _Nonnull paywallID;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiPaywallInfoDict;
@property (nonatomic, strong) UIImage * _Nullable backgroundImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull developerPaywallID;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SKProduct;
@class NamiMetaPurchase;

SWIFT_CLASS("_TtC4Nami15NamiMetaProduct")
@interface NamiMetaProduct : NSObject
@property (nonatomic, strong) SKProduct * _Nonnull product;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiProductInfoDict;
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, readonly) BOOL isPurchased;
@property (nonatomic, readonly, strong) NamiMetaPurchase * _Nullable productPurchase;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NamiPurchaseSource : NSInteger;

/// Class that represents a purchase that has been made
SWIFT_CLASS("_TtC4Nami16NamiMetaPurchase")
@interface NamiMetaPurchase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, copy) NSString * _Nullable transactionIdentifier;
@property (nonatomic, copy) NSDate * _Nonnull purchaseInitiatedTimestamp;
@property (nonatomic) BOOL isSubscription;
@property (nonatomic, copy) NSDate * _Nullable subscriptionExpirationDate;
@property (nonatomic) enum NamiPurchaseSource purchaseSource;
@property (nonatomic, strong) NamiMetaProduct * _Nullable metaProduct;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

SWIFT_CLASS("_TtC4Nami18NamiPaywallManager")
@interface NamiPaywallManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiPaywallManager * _Nonnull shared;)
+ (NamiPaywallManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiPaywallManager * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)presentNamiPaywallFromVC:(UIViewController * _Nullable)fromVC products:(NSArray<NamiMetaProduct *> * _Nullable)products paywallMetadata:(NamiMetaPaywall * _Nonnull)paywallMetadata backgroundImage:(UIImage * _Nullable)backgroundImage forNami:(BOOL)forNami;
+ (void)registerApplicationAutoRaisePaywallBlocker:(BOOL (^ _Nullable)(void))applicationAutoRaisePaywallBlocker;
+ (void)fetchCustomPaywallMetaForDeveloperID:(NSString * _Nonnull)developerPaywallID :(void (^ _Nonnull)(NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nullable))namiCustomPaywallHandler;
+ (void)registerWithApplicationPaywallProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationPaywallProvider;
+ (void)registerWithApplicationSignInProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationSignInProvider;
- (BOOL)canRaisePaywall SWIFT_WARN_UNUSED_RESULT;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC forNami:(BOOL)forNami;
@end

@class UITextView;

SWIFT_CLASS("_TtC4Nami24NamiPaywallTextFieldCell")
@interface NamiPaywallTextFieldCell : UICollectionViewCell <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiPurchaseResult, closed) {
  NamiPurchaseResultPurchased = 0,
  NamiPurchaseResultRenewed = 1,
  NamiPurchaseResultDeferred = 2,
  NamiPurchaseResultRetrying = 3,
  NamiPurchaseResultCanceled = 4,
  NamiPurchaseResultBlocked = 5,
  NamiPurchaseResultFailed = 6,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseSource, closed) {
  NamiPurchaseSourceExternal = 0,
  NamiPurchaseSourceNamiPaywall = 1,
  NamiPurchaseSourceApplication = 2,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseState, closed) {
  NamiPurchaseStatePending = 0,
  NamiPurchaseStatePurchased = 1,
  NamiPurchaseStateConsumed = 2,
  NamiPurchaseStateResubscribed = 3,
  NamiPurchaseStateUnsubscribed = 4,
  NamiPurchaseStatePurchasedNotValidated = 5,
  NamiPurchaseStateDeferred = 6,
  NamiPurchaseStateFailed = 7,
  NamiPurchaseStateCancelled = 8,
  NamiPurchaseStateUnknown = 9,
};


SWIFT_CLASS("_TtC4Nami21NamiReceiptIAPWrapper")
@interface NamiReceiptIAPWrapper : NSObject
- (nonnull instancetype)initWithJsonDict:(NSDictionary<NSString *, id> * _Nonnull)jsonDict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum StoreKitEnvironmentObjC : NSInteger;

SWIFT_CLASS("_TtC4Nami18NamiReceiptWrapper")
@interface NamiReceiptWrapper : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull receiptJSONDict;
@property (nonatomic, readonly) BOOL hasReceiptData;
@property (nonatomic, readonly) NSInteger statusCode;
@property (nonatomic, readonly) enum StoreKitEnvironmentObjC storeKitEnvironmentObjC;
- (NSString * _Nullable)originalApplicationVersion SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary<NSString *, id> *> * _Nullable)latestReceiptInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NamiReceiptIAPWrapper *> * _Nonnull)sortedIAPItems SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC4Nami18NamiStoreKitHelper")
@interface NamiStoreKitHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NamiStoreKitHelper * _Nonnull shared;)
+ (NamiStoreKitHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull noProductIdentifier;)
+ (NSString * _Nonnull)noProductIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)bypassStoreKitWithBypass:(BOOL)bypass;
- (void)clearBypassStoreKitPurchases;
- (void)buyProduct:(NamiMetaProduct * _Nonnull)metaProduct fromPaywall:(NamiMetaPaywall * _Nullable)paywall responseHandler:(void (^ _Nonnull)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))responseHandler;
- (void)verifyReceiptWithCompletion:(void (^ _Nonnull)(NamiReceiptWrapper * _Nullable))completion;
- (BOOL)isOriginalVersion:(NSString * _Nonnull)originalVersion lowerThanVersion:(NSString * _Nonnull)otherVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)currentAppVersion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isProductPurchased:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)anyProductPurchased:(NSArray<NSString *> * _Nonnull)productIDs SWIFT_WARN_UNUSED_RESULT;
- (NamiMetaPurchase * _Nullable)currentPurchaseRecordsForProductWithProductID:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (void)productsForProductIdentifersWithProductIDs:(NSArray<NSString *> * _Nonnull)productIDs productHandler:(void (^ _Nonnull)(BOOL, NSArray<NamiMetaProduct *> * _Nullable, NSArray<NSString *> * _Nullable, NSError * _Nullable))productHandler;
- (NSArray<NamiMetaPurchase *> * _Nonnull)allPurchasedProducts SWIFT_WARN_UNUSED_RESULT;
- (void)registerWithPurchasesChangedHandler:(void (^ _Nullable)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))changeHandler;
/// Returns all products for either s+ubscriptions or purchaes *
+ (NSData * _Nullable)appReceiptData SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)appReceiptJSON SWIFT_WARN_UNUSED_RESULT;
+ (void)restorePurchasesWithHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))handler;
- (void)consumePurchasedProductWithProductID:(NSString * _Nonnull)productID;
@end

@class RoundedView;
@class UILabel;

SWIFT_CLASS("_TtC4Nami17ProductOptionCell")
@interface ProductOptionCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet RoundedView * _Nullable backgroundRoundedView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable descriptionLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable priceLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationMultiplierLabel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Nami11RoundedView")
@interface RoundedView : UIView
- (void)awakeFromNib;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) BOOL maskTopCorners;
@property (nonatomic) BOOL maskBottomCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface SKProduct (SWIFT_EXTENSION(Nami))
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDictWithPurchaseSource:(enum NamiPurchaseSource)purchaseSource SWIFT_WARN_UNUSED_RESULT;
@end

@class NSNumberFormatter;

@interface SKProduct (SWIFT_EXTENSION(Nami))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSNumberFormatter * _Nonnull priceFormatter;)
+ (NSNumberFormatter * _Nonnull)priceFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setPriceFormatter:(NSNumberFormatter * _Nonnull)value;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedMultipliedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDuration SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationNoPer SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationSingular SWIFT_AVAILABILITY(ios,introduced=11.2);
@end

typedef SWIFT_ENUM(NSInteger, SandboxAccelerationItemUnit, closed) {
  SandboxAccelerationItemUnitHour = 0,
  SandboxAccelerationItemUnitWeek = 1,
  SandboxAccelerationItemUnitMonth = 2,
  SandboxAccelerationItemUnitSixMonth = 3,
  SandboxAccelerationItemUnitYear = 4,
};

typedef SWIFT_ENUM(NSInteger, StoreKitEnvironmentObjC, closed) {
  StoreKitEnvironmentObjCProduction = 0,
  StoreKitEnvironmentObjCSandbox = 1,
  StoreKitEnvironmentObjCNamiStoreKitBypass = 2,
  StoreKitEnvironmentObjCEnvironmentNotYetDetected = 3,
};


SWIFT_CLASS("_TtC4Nami19StoreKitQueueHelper")
@interface StoreKitQueueHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, StoreKitStatusCodes, closed) {
  StoreKitStatusCodesStatusOK = 0,
  StoreKitStatusCodesUnreadableJSON = 21000,
  StoreKitStatusCodesReceiptMalformed = 21002,
  StoreKitStatusCodesReceiptAuthFailed = 21003,
  StoreKitStatusCodesSharedSecretInvalid = 21004,
  StoreKitStatusCodesReceiptServerUnavailable = 21005,
  StoreKitStatusCodesSubscriptionExpired = 21006,
  StoreKitStatusCodesReceiptFromSandboxEnvironment = 21007,
  StoreKitStatusCodesReceiptFromProdEnvironent = 21008,
  StoreKitStatusCodesNamiError = 99999,
};









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.0.1 (swiftlang-1001.0.82.4 clang-1001.0.46.5)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import StoreKit;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Nami",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




SWIFT_CLASS("_TtC4Nami22MockPaymentTransaction")
@interface MockPaymentTransaction : SKPaymentTransaction
@property (nonatomic, readonly, copy) NSString * _Nullable transactionIdentifier;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@protocol NamiLogger;

SWIFT_CLASS("_TtC4Nami4Nami")
@interface Nami : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) Nami * _Nonnull shared;)
+ (Nami * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(Nami * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)doConfigBasedWorkWithWorker:(void (^ _Nonnull)(void))worker;
@property (nonatomic) BOOL smartPaywall;
@property (nonatomic) BOOL mlEnabled;
- (void)registerNamiLoggerWithLogger:(id <NamiLogger> _Nonnull)logger;
- (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)configureWithAppID:(NSString * _Nonnull)appID;
+ (void)enterCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)exitCoreContentWithLabel:(NSString * _Nonnull)label;
+ (void)coreActionWithLabel:(NSString * _Nonnull)label;
@end



typedef SWIFT_ENUM(NSInteger, NamiAnalyticsActionType, closed) {
  NamiAnalyticsActionTypePaywallRaise = 0,
  NamiAnalyticsActionTypePaywallClosed = 1,
  NamiAnalyticsActionTypePaywallRaiseBlocked = 2,
  NamiAnalyticsActionTypePurchaseActivity = 3,
};


SWIFT_CLASS("_TtC4Nami17NamiAnalyticsKeys")
@interface NamiAnalyticsKeys : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiAnalyticsPurchaseActivityType, closed) {
  NamiAnalyticsPurchaseActivityTypeNewPurchase = 0,
  NamiAnalyticsPurchaseActivityTypeCancelled = 1,
  NamiAnalyticsPurchaseActivityTypeResubscribe = 2,
  NamiAnalyticsPurchaseActivityTypeRestored = 3,
};


SWIFT_CLASS("_TtC4Nami20NamiAnalyticsSupport")
@interface NamiAnalyticsSupport : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiAnalyticsSupport * _Nonnull shared;)
+ (NamiAnalyticsSupport * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiAnalyticsSupport * _Nonnull)value;
@property (nonatomic, readonly, copy) void (^ _Nullable analyticsHandler)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull);
+ (void)registerAnalyticsHandlerWithHandler:(void (^ _Nullable)(enum NamiAnalyticsActionType, NSDictionary<NSString *, id> * _Nonnull))handler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIEvent;

SWIFT_CLASS("_TtC4Nami15NamiApplication")
@interface NamiApplication : UIApplication
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)sendEvent:(UIEvent * _Nonnull)event;
@end


SWIFT_CLASS("_TtC4Nami11NamiCommand")
@interface NamiCommand : NSObject
+ (void)performCommand:(NSString * _Nonnull)commandString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURLSession;
@class NSURLSessionTask;
@class NSURLSessionDataTask;
@class NSCachedURLResponse;
@class NSURLSessionDownloadTask;

SWIFT_CLASS("_TtC4Nami25NamiCommunicationsManager")
@interface NamiCommunicationsManager : NSObject <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end


SWIFT_CLASS("_TtC4Nami17NamiConfiguration")
@interface NamiConfiguration : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL mlEnabled;)
+ (BOOL)mlEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setMlEnabled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL analyticsEnabled;)
+ (BOOL)analyticsEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setAnalyticsEnabled:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC4Nami24NamiCorrectiveFlowLayout")
@interface NamiCorrectiveFlowLayout : UICollectionViewFlowLayout
- (BOOL)shouldInvalidateLayoutForBoundsChange:(CGRect)newBounds SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class MSMessagesAppViewController;

SWIFT_CLASS("_TtC4Nami20NamiExtensionManager")
@interface NamiExtensionManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiExtensionManager * _Nonnull shared;)
+ (NamiExtensionManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiExtensionManager * _Nonnull)value;
@property (nonatomic) BOOL requestFullScreenPaywalls;
- (void)startupNamiFromMessageExtensionWithMessageViewController:(MSMessagesAppViewController * _Nonnull)messageViewController applicationGroupName:(NSString * _Nullable)applicationGroupName;
- (void)extensionDidResign;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSHTTPURLResponse;

SWIFT_PROTOCOL("_TtP4Nami10NamiLogger_")
@protocol NamiLogger <NSObject>
- (void)logHTTPWithRequest:(NSURLRequest * _Nonnull)request response:(NSHTTPURLResponse * _Nonnull)response responseData:(NSData * _Nullable)responseData message:(NSString * _Nonnull)message;
- (void)logMessage:(NSString * _Nonnull)message;
@end

@class UIImage;

SWIFT_CLASS("_TtC4Nami15NamiMetaPaywall")
@interface NamiMetaPaywall : NSObject
@property (nonatomic, copy) NSString * _Nonnull paywallID;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiPaywallInfoDict;
@property (nonatomic, strong) UIImage * _Nullable backgroundImage;
@property (nonatomic, readonly, copy) NSString * _Nonnull developerPaywallID;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSString * _Nonnull body;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SKProduct;
@class NamiMetaPurchase;

SWIFT_CLASS("_TtC4Nami15NamiMetaProduct")
@interface NamiMetaProduct : NSObject
@property (nonatomic, strong) SKProduct * _Nonnull product;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull namiProductInfoDict;
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, readonly) BOOL isPurchased;
@property (nonatomic, readonly, strong) NamiMetaPurchase * _Nullable productPurchase;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum NamiPurchaseSource : NSInteger;

/// Class that represents a purchase that has been made
SWIFT_CLASS("_TtC4Nami16NamiMetaPurchase")
@interface NamiMetaPurchase : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull productIdentifier;
@property (nonatomic, copy) NSString * _Nullable transactionIdentifier;
@property (nonatomic, copy) NSDate * _Nonnull purchaseInitiatedTimestamp;
@property (nonatomic) BOOL isSubscription;
@property (nonatomic, copy) NSDate * _Nullable subscriptionExpirationDate;
@property (nonatomic) enum NamiPurchaseSource purchaseSource;
@property (nonatomic, strong) NamiMetaProduct * _Nullable metaProduct;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIViewController;

SWIFT_CLASS("_TtC4Nami18NamiPaywallManager")
@interface NamiPaywallManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NamiPaywallManager * _Nonnull shared;)
+ (NamiPaywallManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(NamiPaywallManager * _Nonnull)value;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)presentNamiPaywallFromVC:(UIViewController * _Nullable)fromVC products:(NSArray<NamiMetaProduct *> * _Nullable)products paywallMetadata:(NamiMetaPaywall * _Nonnull)paywallMetadata backgroundImage:(UIImage * _Nullable)backgroundImage forNami:(BOOL)forNami;
+ (void)registerApplicationAutoRaisePaywallBlocker:(BOOL (^ _Nullable)(void))applicationAutoRaisePaywallBlocker;
+ (void)fetchCustomPaywallMetaForDeveloperID:(NSString * _Nonnull)developerPaywallID :(void (^ _Nonnull)(NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nullable))namiCustomPaywallHandler;
+ (void)registerWithApplicationPaywallProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSArray<NamiMetaProduct *> * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationPaywallProvider;
+ (void)registerWithApplicationSignInProvider:(void (^ _Nullable)(UIViewController * _Nullable, NSString * _Nonnull, NamiMetaPaywall * _Nonnull))applicationSignInProvider;
- (BOOL)canRaisePaywall SWIFT_WARN_UNUSED_RESULT;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC;
- (void)raisePaywallFromVC:(UIViewController * _Nullable)fromVC forNami:(BOOL)forNami;
@end

@class UITextView;

SWIFT_CLASS("_TtC4Nami24NamiPaywallTextFieldCell")
@interface NamiPaywallTextFieldCell : UICollectionViewCell <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldInteractWithURL:(NSURL * _Nonnull)URL inRange:(NSRange)characterRange interaction:(UITextItemInteraction)interaction SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NamiPurchaseResult, closed) {
  NamiPurchaseResultPurchased = 0,
  NamiPurchaseResultRenewed = 1,
  NamiPurchaseResultDeferred = 2,
  NamiPurchaseResultRetrying = 3,
  NamiPurchaseResultCanceled = 4,
  NamiPurchaseResultBlocked = 5,
  NamiPurchaseResultFailed = 6,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseSource, closed) {
  NamiPurchaseSourceExternal = 0,
  NamiPurchaseSourceNamiPaywall = 1,
  NamiPurchaseSourceApplication = 2,
};

typedef SWIFT_ENUM(NSInteger, NamiPurchaseState, closed) {
  NamiPurchaseStatePending = 0,
  NamiPurchaseStatePurchased = 1,
  NamiPurchaseStateConsumed = 2,
  NamiPurchaseStateResubscribed = 3,
  NamiPurchaseStateUnsubscribed = 4,
  NamiPurchaseStatePurchasedNotValidated = 5,
  NamiPurchaseStateDeferred = 6,
  NamiPurchaseStateFailed = 7,
  NamiPurchaseStateCancelled = 8,
  NamiPurchaseStateUnknown = 9,
};


SWIFT_CLASS("_TtC4Nami21NamiReceiptIAPWrapper")
@interface NamiReceiptIAPWrapper : NSObject
- (nonnull instancetype)initWithJsonDict:(NSDictionary<NSString *, id> * _Nonnull)jsonDict OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

enum StoreKitEnvironmentObjC : NSInteger;

SWIFT_CLASS("_TtC4Nami18NamiReceiptWrapper")
@interface NamiReceiptWrapper : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull receiptJSONDict;
@property (nonatomic, readonly) BOOL hasReceiptData;
@property (nonatomic, readonly) NSInteger statusCode;
@property (nonatomic, readonly) enum StoreKitEnvironmentObjC storeKitEnvironmentObjC;
- (NSString * _Nullable)originalApplicationVersion SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NSDictionary<NSString *, id> *> * _Nullable)latestReceiptInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSArray<NamiReceiptIAPWrapper *> * _Nonnull)sortedIAPItems SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC4Nami18NamiStoreKitHelper")
@interface NamiStoreKitHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NamiStoreKitHelper * _Nonnull shared;)
+ (NamiStoreKitHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull noProductIdentifier;)
+ (NSString * _Nonnull)noProductIdentifier SWIFT_WARN_UNUSED_RESULT;
- (void)bypassStoreKitWithBypass:(BOOL)bypass;
- (void)clearBypassStoreKitPurchases;
- (void)buyProduct:(NamiMetaProduct * _Nonnull)metaProduct fromPaywall:(NamiMetaPaywall * _Nullable)paywall responseHandler:(void (^ _Nonnull)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))responseHandler;
- (void)verifyReceiptWithCompletion:(void (^ _Nonnull)(NamiReceiptWrapper * _Nullable))completion;
- (BOOL)isOriginalVersion:(NSString * _Nonnull)originalVersion lowerThanVersion:(NSString * _Nonnull)otherVersion SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)currentAppVersion SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isProductPurchased:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (BOOL)anyProductPurchased:(NSArray<NSString *> * _Nonnull)productIDs SWIFT_WARN_UNUSED_RESULT;
- (NamiMetaPurchase * _Nullable)currentPurchaseRecordsForProductWithProductID:(NSString * _Nonnull)productID SWIFT_WARN_UNUSED_RESULT;
- (void)productsForProductIdentifersWithProductIDs:(NSArray<NSString *> * _Nonnull)productIDs productHandler:(void (^ _Nonnull)(BOOL, NSArray<NamiMetaProduct *> * _Nullable, NSArray<NSString *> * _Nullable, NSError * _Nullable))productHandler;
- (NSArray<NamiMetaPurchase *> * _Nonnull)allPurchasedProducts SWIFT_WARN_UNUSED_RESULT;
- (void)registerWithPurchasesChangedHandler:(void (^ _Nullable)(NSArray<NamiMetaPurchase *> * _Nonnull, enum NamiPurchaseState, NSError * _Nullable))changeHandler;
/// Returns all products for either s+ubscriptions or purchaes *
+ (NSData * _Nullable)appReceiptData SWIFT_WARN_UNUSED_RESULT;
+ (NSDictionary<NSString *, id> * _Nonnull)appReceiptJSON SWIFT_WARN_UNUSED_RESULT;
+ (void)restorePurchasesWithHandler:(void (^ _Nonnull)(BOOL, NSError * _Nullable))handler;
- (void)consumePurchasedProductWithProductID:(NSString * _Nonnull)productID;
@end

@class RoundedView;
@class UILabel;

SWIFT_CLASS("_TtC4Nami17ProductOptionCell")
@interface ProductOptionCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet RoundedView * _Nullable backgroundRoundedView;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable descriptionLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable priceLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationLabel;
@property (nonatomic, weak) IBOutlet UILabel * _Nullable durationMultiplierLabel;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC4Nami11RoundedView")
@interface RoundedView : UIView
- (void)awakeFromNib;
@property (nonatomic) CGFloat cornerRadius;
@property (nonatomic) BOOL maskTopCorners;
@property (nonatomic) BOOL maskBottomCorners;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface SKProduct (SWIFT_EXTENSION(Nami))
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDict SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)namiInfoDictWithPurchaseSource:(enum NamiPurchaseSource)purchaseSource SWIFT_WARN_UNUSED_RESULT;
@end

@class NSNumberFormatter;

@interface SKProduct (SWIFT_EXTENSION(Nami))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) NSNumberFormatter * _Nonnull priceFormatter;)
+ (NSNumberFormatter * _Nonnull)priceFormatter SWIFT_WARN_UNUSED_RESULT;
+ (void)setPriceFormatter:(NSNumberFormatter * _Nonnull)value;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedMultipliedPrice;
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDuration SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationNoPer SWIFT_AVAILABILITY(ios,introduced=11.2);
@property (nonatomic, readonly, copy) NSString * _Nullable localizedDurationSingular SWIFT_AVAILABILITY(ios,introduced=11.2);
@end

typedef SWIFT_ENUM(NSInteger, SandboxAccelerationItemUnit, closed) {
  SandboxAccelerationItemUnitHour = 0,
  SandboxAccelerationItemUnitWeek = 1,
  SandboxAccelerationItemUnitMonth = 2,
  SandboxAccelerationItemUnitSixMonth = 3,
  SandboxAccelerationItemUnitYear = 4,
};

typedef SWIFT_ENUM(NSInteger, StoreKitEnvironmentObjC, closed) {
  StoreKitEnvironmentObjCProduction = 0,
  StoreKitEnvironmentObjCSandbox = 1,
  StoreKitEnvironmentObjCNamiStoreKitBypass = 2,
  StoreKitEnvironmentObjCEnvironmentNotYetDetected = 3,
};


SWIFT_CLASS("_TtC4Nami19StoreKitQueueHelper")
@interface StoreKitQueueHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, StoreKitStatusCodes, closed) {
  StoreKitStatusCodesStatusOK = 0,
  StoreKitStatusCodesUnreadableJSON = 21000,
  StoreKitStatusCodesReceiptMalformed = 21002,
  StoreKitStatusCodesReceiptAuthFailed = 21003,
  StoreKitStatusCodesSharedSecretInvalid = 21004,
  StoreKitStatusCodesReceiptServerUnavailable = 21005,
  StoreKitStatusCodesSubscriptionExpired = 21006,
  StoreKitStatusCodesReceiptFromSandboxEnvironment = 21007,
  StoreKitStatusCodesReceiptFromProdEnvironent = 21008,
  StoreKitStatusCodesNamiError = 99999,
};









#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif

#endif
